/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Cronograma.Classes.GUI;

import Cronograma.Classes.DAO.CronogramaDAO;
import Cronograma.Classes.Modelagem.Cronograma;
import Div_turmas.classes.gui.AtualizarTurmasGUI;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gabriel Rocha
 */
public class CronogramaGUI extends javax.swing.JInternalFrame {

    /**
     * Creates new form CronogramaGUI
     */
    public CronogramaGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableDados = new javax.swing.JTable();
        jButtonInsert1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        deleteBasico = new javax.swing.JButton();
        upadeBasico = new javax.swing.JButton();
        insertBasico = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        deleteIntermediario = new javax.swing.JButton();
        upadeIntermediario = new javax.swing.JButton();
        insertIntermediario = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        deleteAvancado = new javax.swing.JButton();
        upadeAvancado = new javax.swing.JButton();
        insertAvancado = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        deleteViagem = new javax.swing.JButton();
        upadeViagem = new javax.swing.JButton();
        insertViagem = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        deleteConversacao = new javax.swing.JButton();
        upadeConversacao = new javax.swing.JButton();
        insertConversacao = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Cronograma");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        JTableDados.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        JTableDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Horário", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sabado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTableDados.setToolTipText("");
        JTableDados.setColumnSelectionAllowed(true);
        JTableDados.getTableHeader().setReorderingAllowed(false);
        JTableDados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableDadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTableDados);
        JTableDados.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jButtonInsert1.setText("Atualizar cronograma");
        jButtonInsert1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsert1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonInsert1)
                .addContainerGap(557, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonInsert1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        deleteBasico.setText("Deletar");
        deleteBasico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBasicoActionPerformed(evt);
            }
        });

        upadeBasico.setText("Atualizar");
        upadeBasico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upadeBasicoActionPerformed(evt);
            }
        });

        insertBasico.setText("Inserir");
        insertBasico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertBasicoActionPerformed(evt);
            }
        });

        jLabel14.setText("Modalidade : ");

        jLabel15.setText("Basico");

        jLabel16.setText("Intermediario");

        jLabel17.setText("Avancado");

        jLabel18.setText("Viagem");

        jLabel19.setText("Conversação");

        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        deleteIntermediario.setText("Deletar");
        deleteIntermediario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteIntermediarioActionPerformed(evt);
            }
        });

        upadeIntermediario.setText("Atualizar");
        upadeIntermediario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upadeIntermediarioActionPerformed(evt);
            }
        });

        insertIntermediario.setText("Inserir");
        insertIntermediario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertIntermediarioActionPerformed(evt);
            }
        });

        jTextField2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField2MouseClicked(evt);
            }
        });

        deleteAvancado.setText("Deletar");
        deleteAvancado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAvancadoActionPerformed(evt);
            }
        });

        upadeAvancado.setText("Atualizar");
        upadeAvancado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upadeAvancadoActionPerformed(evt);
            }
        });

        insertAvancado.setText("Inserir");
        insertAvancado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertAvancadoActionPerformed(evt);
            }
        });

        jTextField3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField3MouseClicked(evt);
            }
        });

        deleteViagem.setText("Deletar");
        deleteViagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteViagemActionPerformed(evt);
            }
        });

        upadeViagem.setText("Atualizar");
        upadeViagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upadeViagemActionPerformed(evt);
            }
        });

        insertViagem.setText("Inserir");
        insertViagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertViagemActionPerformed(evt);
            }
        });

        jTextField4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField4MouseClicked(evt);
            }
        });

        deleteConversacao.setText("Deletar");
        deleteConversacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteConversacaoActionPerformed(evt);
            }
        });

        upadeConversacao.setText("Atualizar");
        upadeConversacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upadeConversacaoActionPerformed(evt);
            }
        });

        insertConversacao.setText("Inserir");
        insertConversacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertConversacaoActionPerformed(evt);
            }
        });

        jTextField5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(insertBasico, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(upadeBasico)
                    .addComponent(deleteBasico, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(insertIntermediario, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(upadeIntermediario)
                    .addComponent(deleteIntermediario, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel18)
                        .addGap(52, 52, 52))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(insertAvancado, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(upadeAvancado)
                            .addComponent(deleteAvancado, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertViagem, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(upadeViagem)
                            .addComponent(deleteViagem, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(insertConversacao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(upadeConversacao, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel19)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(deleteConversacao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(jLabel14))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(insertConversacao)
                            .addComponent(insertViagem)
                            .addComponent(insertAvancado)
                            .addComponent(insertBasico)
                            .addComponent(insertIntermediario))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(upadeConversacao)
                            .addComponent(upadeViagem)
                            .addComponent(upadeAvancado)
                            .addComponent(upadeBasico)
                            .addComponent(upadeIntermediario))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteConversacao)
                            .addComponent(deleteViagem)
                            .addComponent(deleteAvancado)
                            .addComponent(deleteBasico)
                            .addComponent(deleteIntermediario))))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonInsert1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsert1ActionPerformed
       // TODO add your handling code here:
       CronogramaDAO cd = new CronogramaDAO();
       Cronograma c = new Cronograma();
        
       //cd.trazTurmasPirmeiroDiaHorario("Segunda-feira", "08:00:00");
        
       DefaultTableModel dtm = (DefaultTableModel) JTableDados.getModel();
       
       
       
            int hora = 8; 
            int linha = 0;
            //int coluna = 0;
            String horaCerta = null;
            
            while(hora < 22 && linha < 14 ){
                
                //System.out.println("linha: " + linha + " | hora: "+ hora);
                
                
                
                horaCerta = hora + ":00:00";
                
                dtm.setValueAt(horaCerta, linha, 0);
                //aqui a gente lista todas as horas.
                
                
                /*
                dtm.setValueAt(cd.trazTurmasPirmeiroDiaHorario("Segunda-feira", horaCerta), linha, 1);
                dtm.setValueAt(cd.trazTurmasPirmeiroDiaHorario("Terça-feira", horaCerta), linha, 2);
                dtm.setValueAt(cd.trazTurmasPirmeiroDiaHorario("Quarta-feira", horaCerta), linha, 3);
                dtm.setValueAt(cd.trazTurmasPirmeiroDiaHorario("Quinta-feira", horaCerta), linha, 4);
                dtm.setValueAt(cd.trazTurmasPirmeiroDiaHorario("Sexta-feira", horaCerta), linha, 5);
                dtm.setValueAt(cd.trazTurmasPirmeiroDiaHorario("Sábado", horaCerta), linha, 6);
                */
                
                /*-----------------------------------------------------------------------------------*/
                
                /*-------------------------------SEGUNDA-FEIRA--------------------------------*/
                
                
                //dtm.setValueAt(cd.trazTurmasBaseQuatro( null, null,"Segunda-feira", horaCerta), linha, 1);
                //dtm.setValueAt(cd.trazTurmasBaseQuatro("Segunda-feira", horaCerta, null,null), linha, 1);
                //JOptionPane.showMessageDialog(null,"1) Esse é o horário: " + horaCerta + " | e essa é a linha: " + linha);
                //dtm.setValueAt(cd.trazTurmasSegundoDieSemanaHorario("Segunda-feira", horaCerta), linha, 1);
                
                //C2) Esse é o horário: " + horaCerta + " | e essa é a linha: " + linha);
                dtm.setValueAt(cd.trazTurmasPirmeiroDiaHorario("Segunda-feira", horaCerta), linha, 1);
                    
                if(cd.trazTurmasSegundoDieSemanaHorario("Segunda-feira", horaCerta) != null){
                    dtm.setValueAt(cd.trazTurmasSegundoDieSemanaHorario("Segunda-feira", horaCerta), linha, 1);
                }
                //eu acho que com um if simples, conseguimos fazer isso.
                
                //dtm.setValueAt("teste1", 0, 1);
                //dtm.setValueAt("teste2", 0, 1);
                /*--------------------------------TERCA-FEIRA------------------------------------*/
                
                //dtm.setValueAt(cd.trazTurmasBaseQuatro(null,null,"Terça-feira", horaCerta), linha, 2);
                //dtm.setValueAt(cd.trazTurmasBaseQuatro("Terça-feira", horaCerta, null,null), linha, 2);
                //dtm.setValueAt(cd.trazTurmasSegundoDieSemanaHorario("Terça-feira", horaCerta), linha, 2);
                
                dtm.setValueAt(cd.trazTurmasPirmeiroDiaHorario("Terça-feira", horaCerta), linha, 2);
                
                if(cd.trazTurmasSegundoDieSemanaHorario("Terça-feira", horaCerta) != null){
                    dtm.setValueAt(cd.trazTurmasSegundoDieSemanaHorario("Terça-feira", horaCerta), linha, 2);
                }
                
                /*--------------------------------QUARTA-FEIRA-----------------------------------*/
                
                //dtm.setValueAt(cd.trazTurmasBaseQuatro(null, null, "Quarta-feira", horaCerta), linha, 3);
                //dtm.setValueAt(cd.trazTurmasBaseQuatro("Quarta-feira", horaCerta, null, null), linha, 3);
                dtm.setValueAt(cd.trazTurmasPirmeiroDiaHorario("Quarta-feira", horaCerta), linha, 3);
                
                if(cd.trazTurmasSegundoDieSemanaHorario("Quarta-feira", horaCerta) != null){
                    dtm.setValueAt(cd.trazTurmasSegundoDieSemanaHorario("Quarta-feira", horaCerta), linha, 3);
                }
                /*--------------------------------QUINTA-FEIRA----------------------------*/
                
                //dtm.setValueAt(cd.trazTurmasBaseQuatro(null, null, "Quinta-feira", horaCerta), linha, 4);
                //dtm.setValueAt(cd.trazTurmasBaseQuatro("Quinta-feira", horaCerta, null, null), linha, 4);
                dtm.setValueAt(cd.trazTurmasPirmeiroDiaHorario("Quinta-feira", horaCerta), linha, 4);
                
                if(cd.trazTurmasSegundoDieSemanaHorario("Quinta-feira", horaCerta) != null){
                    dtm.setValueAt(cd.trazTurmasSegundoDieSemanaHorario("Quinta-feira", horaCerta), linha, 4);
                }
                
                
                /*--------------------------------SEXTA-FEIRA-----------------------------*/
                
                //dtm.setValueAt(cd.trazTurmasBaseQuatro(null, null, "Sexta-feira", horaCerta), linha, 5);
                //dtm.setValueAt(cd.trazTurmasBaseQuatro( "Sexta-feira", horaCerta, null, null), linha, 5);
                dtm.setValueAt(cd.trazTurmasPirmeiroDiaHorario("Sexta-feira", horaCerta), linha, 5);
                
                if(cd.trazTurmasSegundoDieSemanaHorario("Sexta-feira", horaCerta) != null){
                    dtm.setValueAt(cd.trazTurmasSegundoDieSemanaHorario("Sexta-feira", horaCerta), linha, 5);
                }
                
                /*----------------------------------SABADO-------------------------------*/
                
                //dtm.setValueAt(cd.trazTurmasBaseQuatro(null, null, "Sábado", horaCerta), linha, 6);
                //dtm.setValueAt(cd.trazTurmasBaseQuatro( "Sábado", horaCerta, null, null), linha, 6);
                dtm.setValueAt(cd.trazTurmasPirmeiroDiaHorario("Sábado", horaCerta), linha, 6);
                
                if(cd.trazTurmasSegundoDieSemanaHorario("Sábado", horaCerta) != null){
                    dtm.setValueAt(cd.trazTurmasSegundoDieSemanaHorario("Sábado", horaCerta), linha, 6);
                }
                
                /*-----------------------------------------------------------------------------------*/
                
                //segundos horários:
                
                /*
                dtm.setValueAt(cd.trazTurmasSegundoDieSemanaHorario("Segunda-feira", horaCerta), linha, 1);
                dtm.setValueAt(cd.trazTurmasSegundoDieSemanaHorario("Terça-feira", horaCerta), linha, 2);
                dtm.setValueAt(cd.trazTurmasSegundoDieSemanaHorario("Quarta-feira", horaCerta), linha, 3);
                dtm.setValueAt(cd.trazTurmasSegundoDieSemanaHorario("Quinta-feira", horaCerta), linha, 4);
                dtm.setValueAt(cd.trazTurmasSegundoDieSemanaHorario("Sexta-feira", horaCerta), linha, 5);
                dtm.setValueAt(cd.trazTurmasSegundoDieSemanaHorario("Sábado", horaCerta), linha, 6);*/
                                
                //dtm.setValueAt(cd.trazTurmasBaseQuatro("Segunda-feira", "08:00:00", null, null), linha, 1);

                hora = hora + 1;
                
                linha = linha + 1;
            }
            
        

            /*Se eu quiser trazer a hora de uma turma específica, deve adicionar o campo na tabela, 
            com base nos dados da turma pesquisada. 
            
            Trazemos a turma, se ela tiver algum horário a mais que os normais, pega-se a hora desta turma e adiciona ela
            no cronograma.*/
       
    }//GEN-LAST:event_jButtonInsert1ActionPerformed

    private void JTableDadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableDadosMouseClicked
        // TODO add your handling code here:
       CronogramaGUI cg = new CronogramaGUI();
       
       CronogramaDAO cd = new CronogramaDAO();
       Cronograma c = new Cronograma();
        
       //cd.trazTurmasPirmeiroDiaHorario("Segunda-feira", "08:00:00");
       
       DefaultTableModel dtm = (DefaultTableModel) JTableDados.getModel(); 
       //quando o usuário clicar em uma turma específica, linka ele para a outra tela do software;
       int valor1 = JTableDados.getSelectedRow(), valor2 = JTableDados.getSelectedColumn();
       
       String valor = String.valueOf(JTableDados.getValueAt(valor1,valor2));
       
       if(valor != null){
       JOptionPane.showMessageDialog(null,"Valor: " + valor);
       }
       
       c.setNomeTurma(valor);
       
       //-----------------------
       
    }//GEN-LAST:event_JTableDadosMouseClicked

    private void deleteBasicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBasicoActionPerformed
        CronogramaDAO dao = new CronogramaDAO();
        Cronograma c = new Cronograma();
        jTextField1.setText(null);

        dao.delete(c);
    }//GEN-LAST:event_deleteBasicoActionPerformed

    private void upadeBasicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upadeBasicoActionPerformed
        CronogramaDAO dao = new CronogramaDAO();
        Cronograma c = new Cronograma();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(true);

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {

            File file = fileChooser.getSelectedFile();

            if (file != null) {
                jTextField1.setText(fileChooser.getSelectedFile().getAbsolutePath());

            }
        }

        dao.update(c);
    }//GEN-LAST:event_upadeBasicoActionPerformed

    private void insertBasicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBasicoActionPerformed
        CronogramaDAO daoInsert = new CronogramaDAO();
        Cronograma c = new Cronograma();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(true);

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {

            File arq = fileChooser.getSelectedFile();

            if (arq != null) {
                jTextField1.setText(fileChooser.getSelectedFile().getAbsolutePath());

            }
        }

        daoInsert.insert(c);
    }//GEN-LAST:event_insertBasicoActionPerformed

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        try {
            java.awt.Desktop.getDesktop().open( new File( jTextField1.getText() ) );
            JOptionPane.showMessageDialog(null,"arquivo do conteudo encontrado");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null,"conteudo nao encontrado, certifique-se que ele ainda esteja inserido");
        }

        jTextField1.setEditable(false);
    }//GEN-LAST:event_jTextField1MouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void deleteIntermediarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteIntermediarioActionPerformed
        CronogramaDAO dao = new CronogramaDAO();
        Cronograma c = new Cronograma();
        jTextField2.setText(null);

    }//GEN-LAST:event_deleteIntermediarioActionPerformed

    private void upadeIntermediarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upadeIntermediarioActionPerformed
        CronogramaDAO dao = new CronogramaDAO();
        Cronograma c = new Cronograma();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(true);

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {

            File file = fileChooser.getSelectedFile();

            if (file != null) {
                jTextField2.setText(fileChooser.getSelectedFile().getAbsolutePath());

            }
        }
    }//GEN-LAST:event_upadeIntermediarioActionPerformed

    private void insertIntermediarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertIntermediarioActionPerformed
        CronogramaDAO daoInsert = new CronogramaDAO();
        Cronograma c = new Cronograma();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(true);

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {

            File arq = fileChooser.getSelectedFile();

            if (arq != null) {
                jTextField2.setText(fileChooser.getSelectedFile().getAbsolutePath());

            }
        }

    }//GEN-LAST:event_insertIntermediarioActionPerformed

    private void jTextField2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField2MouseClicked
        try {
            java.awt.Desktop.getDesktop().open( new File( jTextField2.getText() ) );
            JOptionPane.showMessageDialog(null,"arquivo do conteudo encontrado");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null,"conteudo nao encontrado, certifique-se que ele ainda esteja inserido");
        }

    }//GEN-LAST:event_jTextField2MouseClicked

    private void deleteAvancadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAvancadoActionPerformed
        CronogramaDAO dao = new CronogramaDAO();
        Cronograma c = new Cronograma();
        jTextField3.setText(null);

    }//GEN-LAST:event_deleteAvancadoActionPerformed

    private void upadeAvancadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upadeAvancadoActionPerformed
        CronogramaDAO dao = new CronogramaDAO();
        Cronograma c = new Cronograma();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(true);

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {

            File file = fileChooser.getSelectedFile();

            if (file != null) {
                jTextField3.setText(fileChooser.getSelectedFile().getAbsolutePath());

            }
        }
    }//GEN-LAST:event_upadeAvancadoActionPerformed

    private void insertAvancadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertAvancadoActionPerformed
        CronogramaDAO daoInsert = new CronogramaDAO();
        Cronograma c = new Cronograma();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(true);

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {

            File arq = fileChooser.getSelectedFile();

            if (arq != null) {
                jTextField3.setText(fileChooser.getSelectedFile().getAbsolutePath());

            }
        }

    }//GEN-LAST:event_insertAvancadoActionPerformed

    private void jTextField3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField3MouseClicked
        try {
            java.awt.Desktop.getDesktop().open( new File( jTextField3.getText() ) );
            JOptionPane.showMessageDialog(null,"arquivo do conteudo encontrado");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null,"conteudo nao encontrado, certifique-se que ele ainda esteja inserido");
        }

    }//GEN-LAST:event_jTextField3MouseClicked

    private void deleteViagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteViagemActionPerformed
        CronogramaDAO dao = new CronogramaDAO();
        Cronograma c = new Cronograma();
        jTextField4.setText(null);

    }//GEN-LAST:event_deleteViagemActionPerformed

    private void upadeViagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upadeViagemActionPerformed
        CronogramaDAO dao = new CronogramaDAO();
        Cronograma c = new Cronograma();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(true);

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {

            File file = fileChooser.getSelectedFile();

            if (file != null) {
                jTextField4.setText(fileChooser.getSelectedFile().getAbsolutePath());

            }
        }
    }//GEN-LAST:event_upadeViagemActionPerformed

    private void insertViagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertViagemActionPerformed
        CronogramaDAO daoInsert = new CronogramaDAO();
        Cronograma c = new Cronograma();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(true);

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {

            File arq = fileChooser.getSelectedFile();

            if (arq != null) {
                jTextField4.setText(fileChooser.getSelectedFile().getAbsolutePath());

            }
        }

    }//GEN-LAST:event_insertViagemActionPerformed

    private void jTextField4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField4MouseClicked
        try {
            java.awt.Desktop.getDesktop().open( new File( jTextField4.getText() ) );
            JOptionPane.showMessageDialog(null,"arquivo do conteudo encontrado");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null,"conteudo nao encontrado, certifique-se que ele ainda esteja inserido");
        }

        jTextField4.setEditable(false);
    }//GEN-LAST:event_jTextField4MouseClicked

    private void deleteConversacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteConversacaoActionPerformed
        CronogramaDAO dao = new CronogramaDAO();
        Cronograma c = new Cronograma();
        jTextField5.setText(null);

        dao.delete(c);
    }//GEN-LAST:event_deleteConversacaoActionPerformed

    private void upadeConversacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upadeConversacaoActionPerformed
        CronogramaDAO dao = new CronogramaDAO();
        Cronograma c = new Cronograma();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(true);

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {

            File file = fileChooser.getSelectedFile();

            if (file != null) {
                jTextField5.setText(fileChooser.getSelectedFile().getAbsolutePath());

            }
        }

        dao.update(c);
    }//GEN-LAST:event_upadeConversacaoActionPerformed

    private void insertConversacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertConversacaoActionPerformed
        CronogramaDAO daoInsert = new CronogramaDAO();
        Cronograma c = new Cronograma();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(true);

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {

            File arq = fileChooser.getSelectedFile();

            if (arq != null) {
                jTextField5.setText(fileChooser.getSelectedFile().getAbsolutePath());

            }
        }

        daoInsert.insert(c);
    }//GEN-LAST:event_insertConversacaoActionPerformed

    private void jTextField5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField5MouseClicked
        try {
            java.awt.Desktop.getDesktop().open( new File( jTextField5.getText() ) );
            JOptionPane.showMessageDialog(null,"arquivo do conteudo encontrado");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null,"conteudo nao encontrado, certifique-se que ele ainda esteja inserido");
        }

        jTextField5.setEditable(false);
    }//GEN-LAST:event_jTextField5MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTableDados;
    private javax.swing.JButton deleteAvancado;
    private javax.swing.JButton deleteBasico;
    private javax.swing.JButton deleteConversacao;
    private javax.swing.JButton deleteIntermediario;
    private javax.swing.JButton deleteViagem;
    private javax.swing.JButton insertAvancado;
    private javax.swing.JButton insertBasico;
    private javax.swing.JButton insertConversacao;
    private javax.swing.JButton insertIntermediario;
    private javax.swing.JButton insertViagem;
    private javax.swing.JButton jButtonInsert1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JButton upadeAvancado;
    private javax.swing.JButton upadeBasico;
    private javax.swing.JButton upadeConversacao;
    private javax.swing.JButton upadeIntermediario;
    private javax.swing.JButton upadeViagem;
    // End of variables declaration//GEN-END:variables
}
