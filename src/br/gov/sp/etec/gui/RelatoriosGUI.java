/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.gov.sp.etec.gui;

import br.gov.sp.etec.dao.CategoriaDAO;
import br.gov.sp.etec.dao.UtilDAO;
import br.gov.sp.etec.model.Categoria;
import br.gov.sp.etec.model.DFC;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import br.gov.sp.etec.model.Relatorios;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.export.JExcelApiExporterParameter;
import net.sf.jasperreports.engine.export.JRXlsAbstractExporter;
import net.sf.jasperreports.engine.export.ooxml.JRXlsxExporter;
//import net.sf.jasperreports.engine.JRException;
//import net.sf.jasperreports.engine.JasperFillManager;
//import net.sf.jasperreports.engine.JasperPrint;
//import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Edson
 */
public class RelatoriosGUI extends javax.swing.JInternalFrame {

    RelatoriosGeraisGUI1 relatorio;
    Date data = new Date();
    Date date00 = new Date();
    Date date01 = new Date();
    Date data2 = new Date();
    Calendar c1 = Calendar.getInstance();
    Calendar c2 = Calendar.getInstance();
    public static String dataFormatada3, dataFormatada4, var0, var1, var2;
    public static String dataFormatadaInicio, dataFormatadaFinal;

    String var = null;

    /**
     * Creates new form RelatoriosGUI
     */
    public RelatoriosGUI() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jDateChooserInicio = new com.toedter.calendar.JDateChooser();
        jDateChooserFinal = new com.toedter.calendar.JDateChooser();
        jComboBoxCategoria = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxContas = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxTipos = new javax.swing.JComboBox<>();

        setClosable(true);
        setTitle("Relatórios gerais");
        setToolTipText("");
        setMaximumSize(new java.awt.Dimension(324, 340));
        setPreferredSize(new java.awt.Dimension(300, 340));
        setVerifyInputWhenFocusTarget(false);

        jPanel1.setMinimumSize(new java.awt.Dimension(284, 330));
        jPanel1.setPreferredSize(new java.awt.Dimension(284, 330));

        jLabel1.setText("Data de início: ");

        jLabel2.setText("Data final:");

        jLabel3.setText("Categoria:");

        jButton1.setText("Gerar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBoxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ativo", "Passivo", "DFC" }));
        jComboBoxCategoria.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBoxCategoriaFocusLost(evt);
            }
        });

        jLabel4.setText("Contas:");

        jComboBoxContas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBoxContasFocusLost(evt);
            }
        });

        jLabel5.setText("Tipos:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooserInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                            .addComponent(jDateChooserFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxCategoria, 0, 87, Short.MAX_VALUE)
                            .addComponent(jComboBoxContas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxTipos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jDateChooserInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooserFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxContas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxTipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(93, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        
        String categoria = jComboBoxCategoria.getSelectedItem().toString();

        c1.setTime(data);
        c2.setTime(data2);
        c1.add(Calendar.MONTH, 0);
        c2.add(Calendar.MONTH, 0);
        c1.set(Calendar.DAY_OF_MONTH, c1.getActualMinimum(Calendar.DAY_OF_MONTH));
        c2.set(Calendar.DAY_OF_MONTH, c1.getActualMaximum(Calendar.DAY_OF_MONTH));
         date00 = c1.getTime();
        date01 = c2.getTime();
        System.out.println(date00);
        System.out.println(date01);
        DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        String dataFormatada = formatter.format(c1.getTime());
        String dataFormatada2 = formatter.format(c2.getTime());
        System.out.println(dataFormatada);
        System.out.println(dataFormatada2);

        Date data3 = jDateChooserInicio.getDate();
        Date data4 = jDateChooserFinal.getDate();
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        String data5 = format.format(data3);
        String data6 = format.format(data4);
        dataFormatada3 = data5;
        dataFormatada4 = data6;
        
        
        if (categoria.equals("DFC")) {
         jDateChooserInicio.setDate(date00);
         jDateChooserFinal.setDate(date01);
           
        HashMap filtro = new HashMap();
        Connection con = UtilDAO.conectar();
        Date data = new Date();
        Date data2 = new Date();
        data = jDateChooserInicio.getDate();
        data2 = jDateChooserFinal.getDate();
        
        System.out.println(data);
        System.out.println(data2);
        filtro.put("date1", data);
        filtro.put("date2", data2);
        String src = "report9.jasper";
        JasperPrint print = null;
        try {
            print = JasperFillManager.fillReport(src,filtro,con);
           
        } catch (JRException ex) {
            
        }
        
        JasperViewer viwer = new JasperViewer(print, false);
        viwer.setVisible(true);
        
         HashMap filtro2 = new HashMap();
         filtro2.put("date1", data);
        filtro2.put("date2", data2);
        String src2 = "report10.jasper";
        JasperPrint prin2 = null;
        try {
            prin2 = JasperFillManager.fillReport(src2,filtro2,con);
           
        } catch (JRException ex) {
            
        }
        
        JasperViewer viwer2 = new JasperViewer(prin2, false);
        viwer2.setVisible(true);
        }
        
  
        var0 = jComboBoxCategoria.getSelectedItem().toString();
        
        if(jComboBoxContas.getItemCount() == 0){
        }
        else{
            var1 = jComboBoxContas.getSelectedItem().toString();
        }
        
       
        if(jComboBoxTipos.getItemCount() == 0){
        }
        else{
        var2 = jComboBoxTipos.getSelectedItem().toString();
        }        
//        rel.setCategoria(var1);
  
         if (var1.equals("Clientes")) {
            RelatoriosGeraisGUI3 rc = new RelatoriosGeraisGUI3();
            rc.setVisible(true);}
         else if (var0.equals("Ativo")) {
               RelatoriosGeraisGUI2 r = new RelatoriosGeraisGUI2();
            r.setVisible(true);
        } else if (var0.equals("Passivo")) {
            RelatoriosGeraisGUI1 r = new RelatoriosGeraisGUI1();
            r.setVisible(true);
        }

        var0 = null;
        var1 = null;


    }//GEN-LAST:event_jButton1ActionPerformed
    
  


		
    
 

    private void jComboBoxCategoriaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxCategoriaFocusLost
        var = jComboBoxCategoria.getSelectedItem().toString();
         CategoriaDAO cdao = new CategoriaDAO();
        if(var.equals("Ativo")){
            jComboBoxContas.removeAllItems();
        for(Categoria cat: cdao.selectAtivo()){
            jComboBoxContas.addItem(cat);}
        }
        else if(var.equals("Passivo")){
            jComboBoxContas.removeAllItems();
        for(Categoria cat: cdao.selectPassivo()){
            jComboBoxContas.addItem(cat);}
        }
        else {
             jComboBoxContas.removeAllItems();
             jComboBoxTipos.removeAllItems();
        }
    }//GEN-LAST:event_jComboBoxCategoriaFocusLost

    private void jComboBoxContasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxContasFocusLost
        String var7 = jComboBoxContas.getSelectedItem().toString();
        if (var7.equals("Clientes")) {
            
            for (Object array2 : AtivoClientes()) {
                jComboBoxTipos.addItem(array2);
            }
        } else {
            jComboBoxTipos.removeAllItems();
        }
    }//GEN-LAST:event_jComboBoxContasFocusLost

    public ArrayList<Object> CategoriasAtivas() {
        ArrayList<Object> array = new ArrayList();
        array.add("Caixa");
        array.add("Clientes");
        array.add("Estoques");
        array.add("Adintamento");
        array.add("Imobilizados");
        return array;
    }

    public ArrayList<Object> CategoriasPassivas() {
        ArrayList<Object> array = new ArrayList();
        array.add("Contas a pagar");
        array.add("Impostos a pagar");
        array.add("Patrimônio Líquido");
        return array;
    }

    public ArrayList<Object> AtivoClientes() {
        ArrayList<Object> array = new ArrayList();
        array.add("EAD");
        array.add("Avulso");
        array.add("Mensal");
        return array;
    }

    public List<Relatorios> selectRelatorioPassivo() {
        Connection con = UtilDAO.conectar();
        List<Relatorios> listar = new ArrayList<>();
        Relatorios rr = new Relatorios();
        try {
            PreparedStatement ps = null;
            String sql = "select * from passivo";
            ps = con.prepareStatement(sql);

//                        ps.setString(1, var0);
//                        ps.setString(2, dataFormatada);
//                        ps.setString(3, dataFormatada2);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {

                Relatorios r = new Relatorios();
                r.setCategoria(rs.getString("categoria"));
                r.setData_lancamento(rs.getString("data_lancamento"));
                r.setDescricao(rs.getString("descricao"));
                r.setValor(rs.getDouble("valor"));
                listar.add(r);

            }
            rs.close();
            ps.close();
            con.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao tentar buscar os valores");
            ex.printStackTrace();
        }
        return listar;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBoxCategoria;
    private javax.swing.JComboBox<Object> jComboBoxContas;
    private javax.swing.JComboBox<Object> jComboBoxTipos;
    private com.toedter.calendar.JDateChooser jDateChooserFinal;
    private com.toedter.calendar.JDateChooser jDateChooserInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
